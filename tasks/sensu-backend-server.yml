---
- name: Download Script to Add repository Ubuntu/Debian
  get_url:
    url: https://packagecloud.io/install/repositories/sensu/stable/script.deb.sh
    dest: /tmp/script-sensu-backend.deb.sh
    mode: '0766'
  when: ansible_os_family == 'Debian'

- name: Run script to install Sensu Backend
  command: /tmp/script-sensu-backend.deb.sh
  when: ansible_os_family == 'Debian'

- name: Download Script to Add repository RHEL/CentOS
  get_url:
    url: https://packagecloud.io/install/repositories/sensu/stable/script.rpm.sh
    dest: /tmp/script-sensu-backend.rpm.sh
    mode: '0766'
  when: ansible_os_family == 'RedHat'

- name: Run script to install Sensu Backend
  command: /tmp/script-sensu-backend.rpm.sh
  when: ansible_os_family == 'RedHat'

- name: Install Packages Ubuntu/Debian
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - "sensu-go-backend"
      - "sensu-go-cli"
  when: ansible_os_family == 'Debian'

- name: Install Packages RHEL/CentOS
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - "sensu-go-backend"
      - "sensu-go-cli"
  when: ansible_os_family == 'RedHat'

- name: ssl directory
  file:
    path: /etc/sensu/certs
    state: directory
    owner: "sensu"
    group: "sensu"
    mode: 0750
  when: ssl_conf

- name: ssl directory CA
  file:
    path: /usr/local/share/ca-certificates/sensu/
    state: directory
    owner: "sensu"
    group: "sensu"
    mode: 0750
  when: ssl_conf

- name: Create SSL certificates ETCD PEER
  copy:
    dest="{{ item.path }}"
    content="{{ item.content }}"
    owner="sensu"
    group="sensu"
    mode="0640"
  when: ssl_conf and etcd_ssl
  with_items:
    - {path: "{{ sensu_certs }}/{{ ansible_hostname }}.pem" , content: "{{ etcd_peer_content }}" }
    - {path: "{{ sensu_certs }}/{{ ansible_hostname }}-key.pem" , content: "{{ etcd_peer_key_content }}" }
    - {path: "{{ ca_certs }}/ca.pem" , content: "{{ etcd_peer_trusted_ca_content }}" }

- name: Create SSL certificates API and DASHBOARD
  copy:
    dest="{{ item.path }}"
    content="{{ item.content }}"
    owner="sensu"
    group="sensu"
    mode="0640"
  when: ssl_conf and api_dashboard_ssl
  with_items:
    - {path: "{{ sensu_certs }}/cert.pem" , content: "{{ cert_file }}" }
    - {path: "{{ sensu_certs }}/key.pem" , content: "{{ key_file }}" }
    - {path: "{{ ca_certs }}/ca.pem" , content: "{{ trusted_ca_file }}" }

- name: Create config file sensu-backend
  template:
    src: backend.yml.j2
    dest: /etc/sensu/backend.yml
    owner: "{{ user_sensu }}"
    group: "{{ group_sensu }}"
  notify: Restart sensu-backend service

- name: Ensure the sensu-backend is enabled
  systemd:
    name: sensu-backend
    enabled: true
    state: restarted
    daemon_reload: true

- name: Validate if port is listening
  wait_for:
    host: "127.0.0.1"
    port: 8080
    delay: 10
    state: started

- name: Sensuctl configure
  command: "sensuctl configure --non-interactive --username {{ default_user }} \
            --password {{ default_pass }} --url {{ api_url }}  \
            --format tabular --namespace default"
